#!/bin/bash

# mongod - Startup script for mongod

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: mongod
# config: /etc/mongod.conf
# pidfile: /var/run/mongo/mongo.pid

. /etc/rc.d/init.d/functions

# things from mongod.conf get there by mongod reading it


# NOTE: if you change any OPTIONS here, you get what you pay for:
# this script assumes all options are in the config file.
CONFIGFILE="$HOME/etc/mongodb.conf"
OPTIONS=" -f $CONFIGFILE --fork"

DBPATH=`awk -F= '/^dbpath=/{print $2}' "$CONFIGFILE"`
mongod=$HOME/bin/mongod

wait_socket(){
    TIMEOUT=$1
    TIMEOUT=$((TIMEOUT * 2))
    echo
    echo -n "   + Wait MongoDB socket (may be long the firstime) ..."
    i=0
    while [ $(ls /tmp/mongodb-*.sock 2> /dev/null | wc -l) -eq 0 ]; do
        if [ $i -gt $TIMEOUT ]; then
            echo 
            echo "Timeout, Impossible to connect MongoDB ..."
            exit 1
        fi
        i=$((i+1))
        echo -n "."
        sleep 0.5
    done
    SOCKET=$(ls /tmp/mongodb-*.sock | tail -n 1)
    echo -n " Ok ($SOCKET)"
}

start()
{
  echo -n $"Starting mongod: "
  daemon $mongod $OPTIONS > /dev/null
  RETVAL=$?
  [ $RETVAL -eq 0 ] && wait_socket 600 && echo
  [ $RETVAL -eq 0 ] && success $"mongod startup" || failure $"mongod startup"
  echo
}

stop()
{
  echo -n $"Stopping mongod: "
  killproc -p "$DBPATH"/mongod.lock -t30 -TERM $mongod
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ]
}

restart () {
	stop
	start
}

#ulimit -n 12000
RETVAL=0

case "$1" in
  start)
    status $mongod > /dev/null
    if [ $? -ne 0 ]; then
	start
    else
	status $mongod
    fi
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/mongod ] && restart || :
    ;;
  status)
    status $mongod
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL
