#!/usr/bin/env python

import time
import logging

from camqp import camqp

########################################################
#
#   Configuration
#
########################################################

DAEMON_NAME = "amqp2tty"
DAEMON_TYPE = "logger"

AMQP_HOST = "localhost"

logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s %(name)s %(levelname)s %(message)s',
                    )
logger = logging.getLogger(DAEMON_NAME)
myamqp = None

########################################################
#
#   Callback
#
########################################################
	
def on_message(msg):
	source = msg.routing_key + "@" + msg.exchange
	text= "%s:\n\t%s\n" % (source, msg.content.body)
	logger.debug("New message:\n%s" % text)


########################################################
#
#   Functions
#
########################################################


#### Connect signals
RUN = 1
import signal
def signal_handler(signum, frame):
	logger.warning("Receive signal to stop daemon...")
	global RUN
	RUN = 0
	## Stop amqp
	if myamqp:
		myamqp.disconnect()
 
signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)


########################################################
#
#   Main
#
########################################################


amqp = camqp()

amqp.add_queue(DAEMON_NAME, '#', on_message)
amqp.start()

while RUN:
	time.sleep(1)

amqp.stop()
amqp.join()
