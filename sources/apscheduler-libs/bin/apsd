#!/usr/bin/env python
from apscheduler.scheduler import Scheduler
import logging
import time
import string
import ConfigParser

# Logger
logging.basicConfig(filename='/opt/canopsis/var/log/apsd.log', level=logging.DEBUG,
	format='%(levelname)s[%(asctime)s]: %(message)s')
logger = logging.getLogger('APSD')

# Config
class MyParser(ConfigParser.ConfigParser):
	def as_dict(self):
		d = dict(self._sections)
		for k in d:
			d[k] = dict(self._defaults, **d[k])
			d[k].pop('__name__', None)
		return d


config_file = "/opt/canopsis/etc/apsd.ini"
p = MyParser()
try:
	p.read(config_file)
	config = p.as_dict()
except Exception, err:
	logger.info('No config file')

# Init
sched = Scheduler()
c = {
	"daemonic": "True",
	"apscheduler.jobstore.cmongodbjobstore.class": "apschedulerlibs.cmongodbjobstore:CMongoDBJobStore",
	"apscheduler.jobstore.cmongodbjobstore.database": "canopsis",
	"apscheduler.jobstore.cmongodbjobstore.collection": "task"
}
logger.info('Config: %s' % c)
sched.configure(c)
sched.start()

def main_loop():
    while 1:
        time.sleep(0.1)

# Main
if __name__ == '__main__':
	sched.print_jobs()
	try:
		main_loop()
	except KeyboardInterrupt:
		logger.info('Exiting by user request')
		print('Exiting by user request')
		sched.shutdown()
	finally:
		sched.shutdown()
